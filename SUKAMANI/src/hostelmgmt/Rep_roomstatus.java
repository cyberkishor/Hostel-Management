package hostelmgmt;


import hostelmgmt.connection.connection;
import java.io.IOException;
import java.net.URISyntaxException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPathExpressionException;
import net.proteanit.sql.DbUtils;
import org.xml.sax.SAXException;
import utilities.comboboxItem;
import utilities.userSession;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author publisy
 */
public class Rep_roomstatus extends javax.swing.JInternalFrame {

    /**
     * Creates new form Report_date_hscode
     */
    userSession user;
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    int is_active =0;

    
        public Rep_roomstatus() {
        initComponents();
        try {
            conn = connection.getConnection();
        } catch (ParserConfigurationException | SAXException | IOException | XPathExpressionException | URISyntaxException ex) {
            Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
        }
          this.user = user;
          this.fill_room_data();
          this.fillReportTable("SELECT room_status.id, member.fname, member.lname,room_status.room_id from room_status, member where member.id = room_status.member_id");
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        report_panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_report = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        capacity = new javax.swing.JLabel();
        capacity2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        capacity1 = new javax.swing.JLabel();
        roomselect = new javax.swing.JComboBox();
        print = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        table_report.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_report);

        capacity2.setText("Total Capacity of the room :--");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(capacity2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(capacity)
                .addContainerGap(640, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capacity2)
                    .addComponent(capacity))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Room Allocation Status");

        capacity1.setText("Select a room :--");

        roomselect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roomselectItemStateChanged(evt);
            }
        });

        print.setText("Print the Report");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout report_panelLayout = new javax.swing.GroupLayout(report_panel);
        report_panel.setLayout(report_panelLayout);
        report_panelLayout.setHorizontalGroup(
            report_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(report_panelLayout.createSequentialGroup()
                .addGroup(report_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(report_panelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(capacity1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(roomselect, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(report_panelLayout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(report_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, report_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(464, 464, 464))
        );
        report_panelLayout.setVerticalGroup(
            report_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(report_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(report_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, report_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(capacity1)
                        .addComponent(roomselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(print)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(report_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(report_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        Printcomponent  p = new Printcomponent();
        p.printComponent(report_panel);
    }//GEN-LAST:event_printActionPerformed

    private void roomselectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roomselectItemStateChanged
    comboboxItem room_id = (comboboxItem) roomselect.getSelectedItem();
    
    if (room_id.getId()!= 0){
        try {
            fillReportTable("SELECT room_status.id, member.fname, member.lname,room_status.room_id from room_status, member where member.id = room_status.member_id and room_status.room_id = "+room_id.getId());
            String sql = "Select capacity from room where id =? ";
            String[] params = {Integer.toString(room_id.getId())};
            rs = connection.dbSelect(sql, params);
            if (rs.next()){
                capacity.setText(rs.getString("capacity"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Rep_roomstatus.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_roomselectItemStateChanged

    private void fillReportTable(String sql){
        DefaultTableModel dtm = new DefaultTableModel();
        int total = 0;
        try{
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            dtm.addColumn("id");
            dtm.addColumn("First Name");
            dtm.addColumn("Last Name");
            dtm.addColumn("Room no");
            

            while(rs.next()){
                Object objData[] = new Object[4];
                for(int i = 0; i<4;i++){
                    objData[i]= rs.getString(i+1);
                }
                dtm.addRow(objData);
//                total = total + (rs.getInt("Qty"));
            }
            table_report.setModel(dtm);
            table_report.getColumnModel().getColumn(0).setMinWidth(0);
            table_report.getColumnModel().getColumn(0).setMaxWidth(0);
//           lbl_t_qty.setText(total+"");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
         //table_report.setModel(DbUtils.resultSetToTableModel(rs));
    }

    private void fill_room_data(){
    String sql = "select id, room_no from room";
    String[] params = {};
    try{
        rs = connection.dbSelect(sql, params);
        roomselect.addItem(new comboboxItem(0, "Select a room"));
        
        while (rs.next()){
            
            String roomname=rs.getString("room_no");
            int id = rs.getInt("id");
            roomselect.addItem(new comboboxItem(id, roomname));
            
        }
    }
    catch (SQLException e){
        
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel capacity;
    private javax.swing.JLabel capacity1;
    private javax.swing.JLabel capacity2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton print;
    private javax.swing.JPanel report_panel;
    private javax.swing.JComboBox roomselect;
    private javax.swing.JTable table_report;
    // End of variables declaration//GEN-END:variables
}
